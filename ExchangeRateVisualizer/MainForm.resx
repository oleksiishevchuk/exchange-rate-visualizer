<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="trayIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="trayIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgCMDAwBzAwMAcoKCgCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdMSRlUf2l8UZt0wk2md95Ko3PcSpBquk5vXWxHR0cSAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJSYlAVd1Z1xdu4zsWcSP/1XCi/9RwIf/Tb6D/0m8f/9Funv/RqBv21Ff
        V0MAAAAAAAAAAAAAAAAAAAAAAAAAAFx9bWNpypz8ZcqZ/2HIlf9cxpH/lNKy/3HJnP9QwIb/TL6C/0i8
        fv9GrnbwUV9XQwAAAAAAAAAAAAAAAE5aVSdzzKT1cM+k/2zNoP9pzJ3/otm+/9nl3v/E39D/fcyk/1PB
        if9Pv4X/S72B/0qic9tISEgSAAAAAAAAAABtoYuce9St/3fTqv9z0af/rd/I/+/u7v/d6OL/yeLV/+fo
        5/94zKH/VsOL/1LBiP9Ov4T/UXBgbAAAAAAuMC8Ef8ys6oDWsv991a//etSt/7rk0f+649D/tuHM/43V
        s//a5+D/p9rA/13Gkv9ZxI7/VcKK/1OVc7orKysCOkNAGInZuf6G2Lf/g9e0/3/Wsf981a//edSs/77l
        1P/H5tj/7+/u/6Hav/9lypn/YMiV/1zGkf9XqYDcNDQ0Bz1IRB2O277/i9q7/4jZuf+F2Lb/iNm3/9bu
        4//29vb/9PTz/8no2f910af/bM2g/2jLnP9jyZj/Xa6G3jQ0NAczODYGktm/9ZHcwP+O273/itq7/8Dq
        2f/3+fj/4vLr/6Tgxv971K3/d9Oq/3PRpv9vz6L/a82f/2Cjg8ItLS0CAAAAAIe8qrWW3sT/k93C/5Dc
        v//R8OT/5vXv/8br3P+v5M7/u+fU/4vZt/961Kz/dtKp/3LQpf9ehHJ8AAAAAAAAAABmf3ZDnODJ/pnf
        xv+V3sT/sebT//39/f/y+vf/9Pn3//D39P+K2bj/f9ax/3zVrv91xqPsTVFPGQAAAAAAAAAAAAAAAIey
        pJae4cv/m+DI/5jfxv+u5tL/5vfw/9Lw5P+Y3sP/iNm4/4XYtv+B1bL8YHpvXAAAAAAAAAAAAAAAAAAA
        AAA1PDoEiLOmlqDizf6d4cr/muDI/5zgyP+W3sT/kdzA/43bvf+I1LX1ZYJ2Yy0uLgEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABrgntDj8CwtZ3dyPWc4Mr/md/H/pDSuup6p5acVmFdJwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5Pz0GRVBMHUJLSBg0ODcEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/D8AAPAPAADABwAAwAMAAIABAACAAQAAAAAAAAAAAAAAAAAAAAAAAIABAACAAQAAwAMAAMAD
        AADwDwAA/D8AAA==
</value>
  </data>
</root>